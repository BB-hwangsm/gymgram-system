{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BBTrain\\\\Desktop\\\\gym-management-system\\\\frontend\\\\src\\\\pages\\\\SchedulePage.tsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/SchedulePage.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport Calendar from '../components/schedule/Calendar';\nimport ScheduleForm from '../components/schedule/ScheduleForm';\nimport MonthlySchedule from '../components/schedule/MonthlySchedule';\nimport { scheduleAPI, apiUtils } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SchedulePage = () => {\n  _s();\n  const [schedules, setSchedules] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // 스케줄 데이터 로드\n  const loadSchedules = async () => {\n    try {\n      setLoading(true);\n      const year = currentDate.getFullYear();\n      const month = currentDate.getMonth() + 1;\n      const response = await scheduleAPI.getSchedules({\n        year: year,\n        month: month\n      });\n      setSchedules(response.results);\n      setError('');\n    } catch (err) {\n      setError(apiUtils.getErrorMessage(err));\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadSchedules();\n  }, [currentDate]);\n\n  // 스케줄 추가 성공 시 목록 새로고침\n  const handleScheduleAdded = () => {\n    loadSchedules();\n  };\n\n  // 월 변경\n  const changeMonth = direction => {\n    const newDate = new Date(currentDate);\n    newDate.setMonth(newDate.getMonth() + direction);\n    setCurrentDate(newDate);\n  };\n\n  // 날짜 선택\n  const handleDateSelect = date => {\n    setSelectedDate(date);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: '30px',\n          color: '#2c3e50'\n        },\n        children: \"\\uD83D\\uDCC5 \\uC2A4\\uCF00\\uC904 \\uAD00\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: '30px',\n        color: '#2c3e50'\n      },\n      children: \"\\uD83D\\uDCC5 \\uC2A4\\uCF00\\uC904 \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '30px',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 2,\n          minWidth: '400px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          currentDate: currentDate,\n          schedules: schedules,\n          selectedDate: selectedDate,\n          onDateSelect: handleDateSelect,\n          onMonthChange: changeMonth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(ScheduleForm, {\n          selectedDate: selectedDate,\n          onScheduleAdded: handleScheduleAdded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MonthlySchedule, {\n      schedules: schedules,\n      currentDate: currentDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(SchedulePage, \"5hOsi+b1WawmxVxeiIj/vEXbmaQ=\");\n_c = SchedulePage;\nexport default SchedulePage;\nvar _c;\n$RefreshReg$(_c, \"SchedulePage\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","ScheduleForm","MonthlySchedule","scheduleAPI","apiUtils","jsxDEV","_jsxDEV","SchedulePage","_s","schedules","setSchedules","selectedDate","setSelectedDate","Date","toISOString","split","currentDate","setCurrentDate","loading","setLoading","error","setError","loadSchedules","year","getFullYear","month","getMonth","response","getSchedules","results","err","getErrorMessage","handleScheduleAdded","changeMonth","direction","newDate","setMonth","handleDateSelect","date","children","style","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","className","display","gap","flexWrap","flex","minWidth","onDateSelect","onMonthChange","onScheduleAdded","_c","$RefreshReg$"],"sources":["C:/Users/BBTrain/Desktop/gym-management-system/frontend/src/pages/SchedulePage.tsx"],"sourcesContent":["// frontend/src/pages/SchedulePage.tsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Calendar from '../components/schedule/Calendar';\r\nimport ScheduleForm from '../components/schedule/ScheduleForm';\r\nimport MonthlySchedule from '../components/schedule/MonthlySchedule';\r\nimport { Schedule } from '../types';\r\nimport { scheduleAPI, apiUtils } from '../services/api';\r\n\r\nconst SchedulePage: React.FC = () => {\r\n  const [schedules, setSchedules] = useState<Schedule[]>([]);\r\n  const [selectedDate, setSelectedDate] = useState<string>(\r\n    new Date().toISOString().split('T')[0]\r\n  );\r\n  const [currentDate, setCurrentDate] = useState<Date>(new Date());\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  // 스케줄 데이터 로드\r\n  const loadSchedules = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const year = currentDate.getFullYear();\r\n      const month = currentDate.getMonth() + 1;\r\n      \r\n      const response = await scheduleAPI.getSchedules({\r\n        year: year,\r\n        month: month\r\n      });\r\n      \r\n      setSchedules(response.results);\r\n      setError('');\r\n    } catch (err) {\r\n      setError(apiUtils.getErrorMessage(err));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSchedules();\r\n  }, [currentDate]);\r\n\r\n  // 스케줄 추가 성공 시 목록 새로고침\r\n  const handleScheduleAdded = () => {\r\n    loadSchedules();\r\n  };\r\n\r\n  // 월 변경\r\n  const changeMonth = (direction: number) => {\r\n    const newDate = new Date(currentDate);\r\n    newDate.setMonth(newDate.getMonth() + direction);\r\n    setCurrentDate(newDate);\r\n  };\r\n\r\n  // 날짜 선택\r\n  const handleDateSelect = (date: string) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div>\r\n        <h2 style={{ marginBottom: '30px', color: '#2c3e50' }}>📅 스케줄 관리</h2>\r\n        <div className=\"loading\">로딩 중...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ marginBottom: '30px', color: '#2c3e50' }}>📅 스케줄 관리</h2>\r\n      \r\n      {error && (\r\n        <div className=\"error\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      <div style={{ display: 'flex', gap: '30px', flexWrap: 'wrap' }}>\r\n        <div style={{ flex: 2, minWidth: '400px' }}>\r\n          <Calendar\r\n            currentDate={currentDate}\r\n            schedules={schedules}\r\n            selectedDate={selectedDate}\r\n            onDateSelect={handleDateSelect}\r\n            onMonthChange={changeMonth}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ flex: 1, minWidth: '300px' }}>\r\n          <ScheduleForm\r\n            selectedDate={selectedDate}\r\n            onScheduleAdded={handleScheduleAdded}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <MonthlySchedule\r\n        schedules={schedules}\r\n        currentDate={currentDate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchedulePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}